#pragma kernel CSMain

#define NUMBER_OF_ELEMENTS 3
#define ADDRESS(x,y,z,size) x + y * size[0] + z * size[0] * size[1]

static half4 Colors[] =
{
	half4(0,1,1,1),
	half4(1,1,0,1),
	half4(0.2,0.5,1,1)
};

struct Cell
{
	half content[NUMBER_OF_ELEMENTS];
	half volume;
	half temperature;
};

StructuredBuffer<Cell> currentGeneration;
RWTexture3D<half4> Result;

uint3 size;

[numthreads(16,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	Cell cell = currentGeneration[ADDRESS(id.x, id.y, id.z, size)];

	if (cell.volume <= 0 || cell.volume > 1)
	{
		Result[id] = half4(0, 0, 0.2, 1);
		return;
	}

	uint pos = 0;
	[unroll(NUMBER_OF_ELEMENTS)]
	for (uint i = 1; i < NUMBER_OF_ELEMENTS; ++i)
	{
		if (cell.content[i] >= cell.content[pos])
		{
			pos = i;
		}
	}
	Result[id] = Colors[pos];
}
